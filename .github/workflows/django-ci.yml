name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DJANGO_SECRET_KEY: django-secret-key
      DJANGO_ALLOWED_HOSTS: 127.0.0.1,localhost

      MYSQL_DATABASE: gastronome
      MYSQL_USER: django
      MYSQL_PASSWORD: mysql-password

      REDIS_PASSWORD: foobared
      REDIS_URL: redis://:foobared@127.0.0.1:6379/6

    steps:
      - name: Checkout repository (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Rename the example environment file to .env
        run: mv .env.example .env

      - name: Install system packages
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
              git-lfs mysql-server redis-server
          git lfs install

      - name: Initialize MySQL and Redis
        run: |
          sudo service mysql start
          PASS=$(sudo awk '/password/ {print $3; exit}' /etc/mysql/debian.cnf)

          sudo mysql -u debian-sys-maint -p"$PASS" <<SQL
          CREATE DATABASE IF NOT EXISTS \`${{ env.MYSQL_DATABASE }}\`
            DEFAULT CHARACTER SET utf8mb4
            COLLATE utf8mb4_unicode_ci;
          CREATE USER IF NOT EXISTS '${{ env.MYSQL_USER }}'@'localhost'
            IDENTIFIED BY '${{ env.MYSQL_PASSWORD }}';

          GRANT ALL PRIVILEGES ON *.* TO '${{ env.MYSQL_USER }}'@'localhost';
          
          FLUSH PRIVILEGES;
          SQL

          echo "user default on +@all ~* >${{ env.REDIS_PASSWORD }}" | \
            sudo tee -a /etc/redis/redis.conf
          sudo service redis-server restart

          redis-cli -a "${{ env.REDIS_PASSWORD }}" PING

      - name: Clone DistilBERT checkpoints
        run: |
          rm -rf assets/distilbert-base-uncased
          git clone --depth 1 --filter=blob:none --sparse \
            https://huggingface.co/distilbert-base-uncased \
            assets/distilbert-base-uncased
          cd assets/distilbert-base-uncased
          git sparse-checkout init --no-cone
          git sparse-checkout set \
            /config.json \
            /tokenizer.json \
            /tokenizer_config.json \
            /vocab.txt \
            /pytorch_model.bin \
            /model.safetensors

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django test suite
        run: |
          python manage.py test business user review api experiments recommend core
